#+title:    LPI Linux Essentials
#+author:   h4ss4n
#+date:     <2023-06-21 mié.>

* A Cloud Guru

** Index

- [[1. Open Source][1. Open Source]]
- [[2. Finding Your Way][2. Finding Your Way]]
- [[3. Command Line][3. Command Line]]
- [[4. Operating System][4. Operating System]]
- [[5. Security][5. Security]]

** 1. Open Source

*** 1.1 Linux Evolution and Popular Operating Systems

**** 1. Linux Distributions

- *Distribution*, it's a collection of components that form a system
  + _Hardware_
    It's the physical device being used as a *compute* resource, which include some form of processing capability, as well as a short term and long term data storage.

  + _Kernel_
    It's the framework that connects the application layer to the hardware, incorporated into the file hierarchy */dev* and */sys* directories. System calls are made within this low-level abstraction process, the information is mapped in */proc*.

  + _Core Utilities_
    Are the foundational *utilities* (basic file, shell and text manipulation) on every OS. For example: set and change file permission and ownership, concatenate and writes files, exit status, listing directories and files.

  + _X_
    It's an architecture agnostic framework for the GUI environment and input devices. While the X Server is designed to be used over network connections.

    Remote machine                   User's workstation
                            ╔═════════════════════════════════╗
                            ║ [ X client ] -◄-►- |          | ║ -◄- Keyboard
                  Network   ║ [ X client ] -◄-►- | X Server | ║ -◄- Mouse
    [ X client ] ----//---- ║ --------------◄-►- |          | ║ -►- Screen
                            ╚═════════════════════════════════╝

  + _Graphical Interface_
    It's the environment to navigate the OS, often referred as a Desktop (Gnome, KDE, Unity, Cinnamon, MATE, Xfce, etc).

- *Popular Distributions*
  + RHEL [Commercial, RPM, Fixed]
    - CentOS
    - Fedora

  + Debian [Community, DEB, Fixed]
    - Ubuntu
    - Linux Mint

  + SUSE [Commercial, ZYpp, Fixed]
    - openSUSE Leap
    - openSUSE Tumbleweed

**** 2. Linux Embedded Systems

- *Embedded Systems*, a combination of hardware and software for a purpose.

- *Popular Embedded*

╔═══════════════╦═══════════════╗
║  Application  ║  Application  ║
║        A      ║        B      ║
╠═══════════════╬═══════════════╣
║   Libraries   ║   Libraries   ║
╠═══════════════╩═══════════════╣
║    High-level Abstractions    ║
╠═══════════════╦═══════════════╣
║   Networking  ║  File Systems ║
╠═══════════════╩═══════════════╣
║      Low-level Interfaces     ║
╠═══════════════════════════════╣
║            Hardware           ║
╚═══════════════════════════════╝

From consumer electronics, industrial automation, networking equipment, and even medical instruments.
Two of the more widely used are:
- Android, for mobile OS
- Raspberry Pi, as teaching and learning device

**** 3. Linux in the Cloud

- *The Cloud*, software and services that run and are available on the internet.

╔═══════════════════════════════════════════════════╗
║ The Cloud                                         ║
║ ╔═══════════════════════════════════════════════╗ ║
║ ║ Region                 +--------------------+ ║ ║
║ ║ +--------------------+ | Availability Zone  | ║ ║
║ ║ | Availability Zone  | | +----------------+ | ║ ║
║ ║ | +----------------+ | | | Subnet         | | ║ ║
║ ║ | | Subnet         | | | +----------------+ | ║ ║
║ ║ | +----------------+ | +--------------------+ ║ ║
║ ║ +--------------------+                        ║ ║
║ ╚═══════════════════════════════════════════════╝ ║
╚═══════════════════════════════════════════════════╝

  + The Cloud, modeled by AWS comprise layers of infrastructural components as high level abstraction.
  + Region, one cloud hosted location around the world, where each one is independent of the others.
  + Availability Zone, a collection of regional data centers, providing fault tolerance and stability.
  + Subnet, the local network instance for the compute resource in the cloud.

*** 1.2 Major Applications

**** 1. Desktop Applications

- *Desktop*
  + Office Applications
    - OpenOffice
    - LibreOffice

  + Web Browser
    - Firefox

  + Mail Client
    - Thunderbird

  + Image Editor
    - GIMP

**** 2. Server Applications

- *Server*
  + Web Server
    - Apache
    - NGNIX

  + Database Server
    - MySQL
    - MariaDB

  + File Sharing
    - Samba
    - NFS

  + Private Cloud
    - ownCloud
    - Nextcloud

**** 3. Development Languages

- *Languages*
  + Shell
  + C
  + Java
  + JavaScript
  + Perl
  + Python
  + PHP

**** 4. Package Management Tools

- *Package Management*
  + dpkg: Debian Package
    [Debian, Ubuntu]
    - apt-get: Advanced Package Tool

  + rpm: Red Hat Package Manager
    [RHEL, Fedora, CentOS, openSUSE]
    - yum: Yellowdog Updater, Modified

*** 1.3 Open-Source Software and Licensing

**** 1. Open-Source Philosophy

- *Philosophy*, the source code is available for anyone to freely view, use, modify, or redistribute.

- *Forking*, use the source code from one project to start an entirely new parallel project.

- *Crossroads*

  ◄------- Permissive -------           ------- Copyleft -------►
   No restrictions on                    Derivative work must use
   licensing derivate work               the same license as the
                                         original software

**** 2. Open-Source Licensing

- *Licensing*, provides rules and guidelines for how the work may be used.
  + It permits others to contribute without seeking permission first.

- *License Examples*

  Public Domain  ║  Permissive  ║  Copyleft
                 ║              ║
   [ CCO 1.0 ]   ║    [ BSD ]   ║  [ GPL ]
                 ║              ║

  ◄--- least ----- Restrictions ---- most ---►

  [ CCO 1.0 ] ---► [ MIT ]    [ Mozilla 2.0 ] ---► [ LGPL ] ---► [ GPLv3 ]
                      !              ▲                               ▲
                      ▼              ¡                               ¡
                 [ BSD (3c)] ---------                               ¡
   Inbound            !                                              ¡
Compatibility         ▼                                              ¡
                [ Apache 2.0] ----------------------------------------

**** 3. FSF and OSI

  - *Open Source Initiative*, focus in the practical benefits of the software.

  - *Free Software Foundation*, focus more on the ethics of rights restrictions regarding proprietary software.

*** 1.4 ICT Skills and Working in Linux

**** 1. Desktop Skills

  - *Popular Environments*
    + Cinnamon
    + Gnome
    + Unity
    + KDE
    + Mate
    + LXDE
    + XFCE

  - *Userspace and Privacy*

    + User A  /home  |
    + User B  /home  | Root
    + User C  /home  |

**** 2. Getting to the CLI

  - The power of the CLI is to manage and work with other systems as if you're right there.

                     [ app ]
    Local client -► SSH client ---------------► Server
                                 Port 22/TCP

  - To access by SSH you need:

    1) input address (use ip or hostname)

        $ ssh user@remote_ip

    2) accept finger print (if first time access)

    3) input remote password

**** 3. Industry Uses

  - *Virtualization*

    [ Physical host computer ]  -  limited by finite resources

    [ Virtual guest host 1 ]  |
    [ Virtual guest host 2 ]  | -  share resources
    [ Virtual guest host 3 ]  |

  - *Linux in the Cloud*

    Abstraction of VMs over the internet

** 2. Finding Your Way

*** 2.1 Command Line Basics

**** 1 Basic Shell

- *Bash*, the shell is both a command line interpreter and a programming language.

    [cloud_user@ip-10-0-1-10 ~] $ ls

  + _Command Prompt_, a string at the beginning of the command line with: user, host and working directory
    - the '$' at the end denotes the user privileges

  + _Commands_, as text after the Command Prompt, executed by the shell as processes.

**** 2. Syntax

- Notation for the 'Read input' to parse into commands to 'Display output'
  + the '#' are for comments (which are ignored)

**** 3. Variables

- Store values (number, character or strings) for easy reference:

    [cloud_user@ip-10-0-1-10 ~] $ var1="hello"

    [cloud_user@ip-10-0-1-10 ~] $ echo $var1
    hello

  + to store commands into variables

    [cloud_user@ip-10-0-1-10 ~] $ var2="$(ls)"

    [cloud_user@ip-10-0-1-10 ~] $ echo $var2
    test.txt doc_3.md


  + default variables:

    $HOME the current user's home directory
    $PS1 the primary prompt string
    $PATH a colon-separated list of directories where the shell looks for commands

**** 4. Quoting

- Preserve input that contains special characters or spaces.

- *Methods*
  + \ preserves the literal value of the next following character
  + ' preserve the literal value of every character
  + " preserve the literal value of most characters

*** 2.2 Using the Command Line to Get Help

**** 1. Man Pages

- Traditional package documentation for application usage, invoked by:

    $ man <command>

**** 2. Info Pages

- Additional detailed documentation, which uses a structure for linking pages:

    $ info <command>

*** 2.3 Using Directories and Listing Files

**** 1. Files and Directories

**** 2. Hidden Files and Directories

**** 3. Home Directories

**** 4. Absolute and Relative Paths

** 3. Command Line

*** 3.1 Archiving Files on the Command Line

**** 1. Archiving Files and Directories

**** 2. Archives and Compression

*** 3.2 Searching and Extracting Data from Files

**** 1. Command Line Pipes

**** 2. I/O Redirection

**** 3. Basic Regular Expressions

*** 3.3 Turning Commands into a Script

**** 1. Basic Shell Scripting

**** 2. Common Rext Editors

** 4. Operating System

*** 4.1 Choosing an OS

**** 1. OS Differences

**** 2. Distribution Lifecycle

*** 4.2 Computer Hardware

**** 1. Hardware

*** 4.3 Where Data Is Stored

**** 1. Programs and Configuration

**** 2. Processes

**** 3. System Messaging

**** 4. Logging

*** 4.4 Your Computer on the Network

**** 1. Networks and Router

**** 2. DNS Client Config

**** 3. Network Configuration

** 5. Security

*** 5.1 Basic Security

**** 1. Root and Standard Users

**** 2. System Users

*** 5.2 Users and Groups

**** 1. User and Group Commands

**** 2. User IDs

*** 5.3 File and Directory Permissions and Ownership

**** 1. File and Directory Permissions

*** 5.4 Special Directories and Files

** Source

+ [[https://lucid.app/lucidchart/fc06cd7d-70f2-494a-843b-5d86ffb4331e/view?page=KMP6r1rr0nfK#][https://lucid.app/lucidchart/fc06cd7d-70f2-494a-843b-5d86ffb4331e/view]]
